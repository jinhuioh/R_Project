##조건문 써보자.
num <- 55
if(num > 50){
  print('50보다 크다.')
}else{
  print('50보다 작다')
}

result <- ifelse(num > 50, '크다','작다')
cat('50보다', result)

#2 + 3 :2항연산자
#a++ :1항연산자


##반복문
for(x in 1:5){
  print(x)
}

for(x in c(1, 5, 6, 7)){
  print(x)
}

array <- c(100, 300, 450)
for(x in array){
  print(x)
}
print(array[1])

for(x in 1:3){
  print(array[x])
}
#기존에 있는 벡터에 맨 끝에 455를 붙여보자.
result2 <- c(array, 455)
print(result2)

result2[4] <- 777
print(result2)

result2[c(1,3)] <- c(222, 999)
print(result2)

result2[1:2] <- 55:56
print(result2)

result2[5] <- 888
print(result2)

#1번 다음에(중간에) 값을 넣어보자.
result2 <- append(result2, 333, after = 1)
print(result2)

#빈벡터 c
result3 <- c()
values = c(99, 22, 33, 43, 9 ,54, 65, 2)
#각 값들이 짝수인지 판별해서
#짝수면 even 홀수면 odd로 집어넣어보자.
for (x in values) {
  if(x%%2 == 0){
    print('even')
    #result3에 even으로 값을 붙여보자.
    result3 <- c(result3, 'even') 
  }else{
    print('odd')
    #result3에 odd로 값을 붙여보자.
    result3 <- c(result3, 'odd')
  }
}
length(values)
print(result3)

names3 <- c()
##입력값 받아서 names3에 누적시켜보자.
library(svDialogs)

for (x in 1:length(values)) {
  n <- readline('name input > ')
  names3 <- c(names3, n)
}
print(names3)

df <- data.frame(names3, values, result3)
print(class(df))
df

str(df)#df의 형태와 값, chr,num,chr등 타입까지 보여준다.
dim(df)#행렬 개수 보여줌
head(df,3)
dim(df)
df[1:2, 1:2]
#행(1,3,5)열(1,3)만 가져와보자.
df[c(1,3,5), c(1,3)]

#컬럼명 result3에서 짝수인것만 찾기
df2 <- subset(df, result3 =='even')
print(df2)
#df에서 values가 50이상 프린트
#df에서 values가 50미만 프린트
#values가 50미만, result3가 even인 것을 찾아서 df3에 저장.
print(subset(df, values > 50))#subset조건을 주어 추출
print(subset(df, values < 50))
df3 <- subset(df,values < 50 & result3 =='even')
df3

df.names3 <- df$names3
#df에서 names3컬럼을 추출할 때 $를 쓴다.
str(df.names3)#str구조 볼 때 씀
df.names3
table(df$names3)#빈도수 체크

df
df[c(1,4,8),1] <- 'kim'
df
df[c(6),1] <- 'song'
df[c(5,7),1] <- 'park'
df

table(df$names3)
df4 <- table(df$names3)
df4
library(ggplot2)
ggplot(df, aes(x= names3, y=values)) + geom_point()


